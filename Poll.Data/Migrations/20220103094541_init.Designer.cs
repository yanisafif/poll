// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Poll.Data;

namespace Poll.Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20220103094541_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.12");

            modelBuilder.Entity("Poll.Data.Model.Choice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("SurveyId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SurveyId");

                    b.ToTable("Choices");
                });

            modelBuilder.Entity("Poll.Data.Model.Survey", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<string>("GuidDeactivate")
                        .HasColumnType("longtext");

                    b.Property<string>("GuidLink")
                        .HasColumnType("longtext");

                    b.Property<string>("GuidResult")
                        .HasColumnType("longtext");

                    b.Property<string>("GuidVote")
                        .HasColumnType("longtext");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("MultipleChoices")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Surveys");
                });

            modelBuilder.Entity("Poll.Data.Model.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Pseudo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Poll.Data.Model.Vote", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("ChoiceId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ChoiceId");

                    b.HasIndex("UserId");

                    b.ToTable("Votes");
                });

            modelBuilder.Entity("Poll.Data.Model.Choice", b =>
                {
                    b.HasOne("Poll.Data.Model.Survey", "Survey")
                        .WithMany("Choices")
                        .HasForeignKey("SurveyId");

                    b.Navigation("Survey");
                });

            modelBuilder.Entity("Poll.Data.Model.Survey", b =>
                {
                    b.HasOne("Poll.Data.Model.User", "User")
                        .WithMany("Surveys")
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Poll.Data.Model.Vote", b =>
                {
                    b.HasOne("Poll.Data.Model.Choice", "Choice")
                        .WithMany("Votes")
                        .HasForeignKey("ChoiceId");

                    b.HasOne("Poll.Data.Model.User", "User")
                        .WithMany("Votes")
                        .HasForeignKey("UserId");

                    b.Navigation("Choice");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Poll.Data.Model.Choice", b =>
                {
                    b.Navigation("Votes");
                });

            modelBuilder.Entity("Poll.Data.Model.Survey", b =>
                {
                    b.Navigation("Choices");
                });

            modelBuilder.Entity("Poll.Data.Model.User", b =>
                {
                    b.Navigation("Surveys");

                    b.Navigation("Votes");
                });
#pragma warning restore 612, 618
        }
    }
}
